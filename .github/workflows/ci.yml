name: CI

on: [push]

env:
  node_version: "12.15"

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node_version }}
    - uses: c-hive/gha-yarn-cache@v1
    - name: Install JS dependencies
      run: yarn install
    - name: Lint
      run: yarn lint

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node_version }}
    - uses: c-hive/gha-yarn-cache@v1
    - name: Install JS dependencies
      run: yarn install
    - name: Test
      run: yarn test

  build:
    runs-on: windows-latest
    timeout-minutes: 10
    needs: [lint, test]
    steps:
    - name: Show current ref
      run: echo ${{ github.ref }}
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node_version }}
    - uses: c-hive/gha-yarn-cache@v1
    - name: Cache Electron dependencies
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\electron
        key: ${{ runner.OS }}-electron-dependencies-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-electron-dependencies-
    - name: Cache electron-builder dependencies
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\electron-builder
        key: ${{ runner.OS }}-electron-builder-dependencies-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-electron-builder-dependencies-
    - name: Install JS dependencies
      run: yarn install
    - name: Build
      run: yarn win:package:win ${{ github.ref }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_API_URL: ${{ secrets.FIREBASE_API_URL }}
        FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
    - name: Copy deliverables
      run: |
        mkdir deliverables
        cp release/*.exe deliverables
        cp release/latest.yml deliverables
        cp release/*.exe.blockmap deliverables
    - uses: actions/upload-artifact@master
      with:
        name: deliverables
        path: deliverables
